name: Django CI

on: [push]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.9'

    - name: Install Poetry
      run: |
        pip install poetry

    - name: Install dependencies
      run: |
        poetry install --no-root

    - name: Run flake8
      run: poetry run flake8 .

  test:
    runs-on: ubuntu-latest
    needs: lint

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.9'

    - name: Install Poetry
      run: |
        pip install poetry

    - name: Install dependencies
      run: |
        poetry install --no-root

    - name: Run tests
      run: |
        poetry run python manage.py test
        

  copy_files_in_server:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Create .env file
        run: |
          touch .env
          echo '"${{ secrets.ENV_FILE }}"' | sed "s/\"//g" > .env # Удаление кавычек в файле. P.S. их не должно быть в секретах

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Adding Known Hosts  # ...
        run: ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Copy project files to server
        run: |
          rsync -avz --exclude '__pycache__' --exclude '.git' --exclude '.github' . ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_DIR }}

  run_server:
    needs: copy_files_in_server
    runs-on: ubuntu-latest
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Run Server
        run: |
          ssh -o StrictHostKeyChecking=no -vT ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ${{ secrets.DEPLOY_DIR }}
            sudo docker compose down
            sudo docker container rm $(docker ps -a -q)
            sudo docker compose up -d --build
          EOF